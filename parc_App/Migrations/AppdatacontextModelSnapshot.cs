// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using parc_App.Models;

#nullable disable

namespace parc_App.Migrations
{
    [DbContext(typeof(Appdatacontext))]
    partial class AppdatacontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("parc_App.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("parc_App.Models.HistoriqueAffectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAffectation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRetour")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaterielId")
                        .HasColumnType("int");

                    b.Property<int?>("PreneurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterielId");

                    b.HasIndex("PreneurId");

                    b.ToTable("HistoriqueAffectations");
                });

            modelBuilder.Entity("parc_App.Models.Materiel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdresseMAC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationsInstallees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Connectivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Couleur")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Etat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NombreDeSlotsRAM")
                        .HasColumnType("int");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreneurId")
                        .HasColumnType("int");

                    b.Property<string>("RAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stockage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taille")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempsDeReponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeEcran")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeImpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeMateriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeRAID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeScanner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VitesseImpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VitesseScan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PreneurId");

                    b.ToTable("Materiels");
                });

            modelBuilder.Entity("parc_App.Models.Preneur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.ToTable("Preneurs");
                });

            modelBuilder.Entity("parc_App.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("parc_App.Models.HistoriqueAffectation", b =>
                {
                    b.HasOne("parc_App.Models.Materiel", "Materiel")
                        .WithMany()
                        .HasForeignKey("MaterielId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("parc_App.Models.Preneur", "Preneur")
                        .WithMany()
                        .HasForeignKey("PreneurId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Materiel");

                    b.Navigation("Preneur");
                });

            modelBuilder.Entity("parc_App.Models.Materiel", b =>
                {
                    b.HasOne("parc_App.Models.Preneur", "Preneur")
                        .WithMany("Materiels")
                        .HasForeignKey("PreneurId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Preneur");
                });

            modelBuilder.Entity("parc_App.Models.Preneur", b =>
                {
                    b.HasOne("parc_App.Models.Departement", "Departement")
                        .WithMany("Preneurs")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("parc_App.Models.Departement", b =>
                {
                    b.Navigation("Preneurs");
                });

            modelBuilder.Entity("parc_App.Models.Preneur", b =>
                {
                    b.Navigation("Materiels");
                });
#pragma warning restore 612, 618
        }
    }
}
